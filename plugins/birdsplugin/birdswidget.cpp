#include "birdswidget.h"
#include "ui_birdswidget.h"

#include <QDebug>

#include <qmath.h>
#include <QTime>

BirdsWidget::BirdsWidget(QWidget *parent) :
    QWidget(parent)
    , _ui(new Ui::BirdsWidget)
    , _scene(new QGraphicsScene(0, 0, 400, 300))
    , _timer(new QTimer)
    , _animationCounter(0)
{
    _ui->setupUi(this);
    qsrand(QTime::currentTime().msec());

    _ui->view->setAlignment(Qt::AlignTop | Qt::AlignLeft);
    _ui->view->setRenderHints(QPainter::Antialiasing);
    _ui->view->show();

    animate();

    _timer->setInterval(50);
    connect(_timer, SIGNAL(timeout()), this, SLOT(animate()));
    _timer->start();
}

BirdsWidget::~BirdsWidget()
{
    delete _ui;
}

void BirdsWidget::animate()
{
    _scene->clear();

    normalAnimation(_animationCounter++);

    _ui->view->setScene(_scene);
}

void BirdsWidget::normalAnimation(unsigned int counter)
{
    _scene->addPixmap(QPixmap(":/birds/images/higru.png"));

    QPen cordPen;
    cordPen.setWidth(3);
    cordPen.setCapStyle(Qt::RoundCap);

    // front cord
    QPainterPath p1(QPointF(17, 140));
    p1.cubicTo(160, 170 + (qSin(counter/10)*4), 210, 160 + (qSin((counter+5)/10)*2), 323, 151);
    _scene->addPath(p1, cordPen);

    // rear cord
    QPainterPath p2(QPointF(72, 110));
    p2.quadTo(200, 140 + (qSin((counter+qrand()%5)/10)), 378, 120);
    _scene->addPath(p2, cordPen);

    // swing
    QPointF swingKnot1(p1.pointAtPercent(0.8));
    QPointF swingKnot2(p1.pointAtPercent(0.9));
    _scene->addLine(swingKnot1.x(), swingKnot1.y(), swingKnot1.x(), swingKnot1.y()+50);
    _scene->addLine(swingKnot2.x(), swingKnot2.y(), swingKnot2.x(), swingKnot2.y()+50);

    _scene->addPixmap(QPixmap(":/birds/images/pillars.png"));
}

void BirdsWidget::paintEvent(QPaintEvent *)
{
    _ui->view->ensureVisible(_scene->sceneRect());
    // remove the mysterious border generated by fitInView by adjusting the sceneRect
    QRectF rect(_scene->sceneRect());
    _ui->view->fitInView(QRectF(rect.x(), rect.y(), rect.width()-6, rect.height()-6), Qt::KeepAspectRatio);
}
