#include "birdswidget.h"
#include "ui_birdswidget.h"

#include <QDebug>

#include <QGraphicsPixmapItem>

#include <qmath.h>
#include <QTime>

#include "normalanimation.h"

BirdsWidget::BirdsWidget(QWidget *parent) :
    QWidget(parent)
    , _ui(new Ui::BirdsWidget)
    , _scene(new QGraphicsScene(0, 0, 400, 300))
    , _timer(new QTimer)
  , _animation(new NormalAnimation(_scene))
  , _flukso(new Flukso())
{
    _ui->setupUi(this);
    qsrand(QTime::currentTime().msec());

    _ui->view->setAlignment(Qt::AlignTop | Qt::AlignLeft);
    _ui->view->setRenderHints(QPainter::Antialiasing);
    _ui->view->show();

    animate();

    _timer->setInterval(50);
    connect(_timer, SIGNAL(timeout()), _animation, SLOT(step()));
    _timer->start();

    connect(_flukso, SIGNAL(valueChanged(QString, int)), _animation, SLOT(setValue(QString, int)));
}

BirdsWidget::~BirdsWidget()
{
    delete _ui;
}

void BirdsWidget::animate()
{
    _animation->reset();

    _ui->view->setScene(_scene);
}

#if 0
void BirdsWidget::normalAnimation(unsigned int counter, int value)
{
    _scene->addPixmap(QPixmap(":/birds/images/higru.png"));

    QGraphicsPixmapItem* clouds = _scene->addPixmap(QPixmap(":/birds/images/normalclouds.png"));
    clouds->setPos(_scene->sceneRect().x() + (counter/2 % _scene->sceneRect().toRect().width()), _scene->sceneRect().y());
    QGraphicsPixmapItem* clouds2 = _scene->addPixmap(QPixmap(":/birds/images/normalclouds.png"));
    clouds2->setPos(_scene->sceneRect().x() + (counter/2 % _scene->sceneRect().toRect().width()) - _scene->sceneRect().width(), _scene->sceneRect().y());

    /*
    // swing
    QPointF swingKnot1(p1.pointAtPercent(0.7));
    QPointF swingKnot2(p1.pointAtPercent(0.9));
    //_scene->addLine(swingKnot1.x(), swingKnot1.y(), swingKnot1.x(), swingKnot1.y()+50);
    //_scene->addLine(swingKnot2.x(), swingKnot2.y(), swingKnot2.x(), swingKnot2.y()+50);
    QGraphicsPixmapItem* swing = _scene->addPixmap(QPixmap(":/birds/images/swing.png"));
    swingGroup->addToGroup(swing);
    //swing->translate(0, ceil((swingKnot1.y() - swingKnot2.y())/2));

    int texty = swingKnot1.y() + 40;
    qDebug() << texty;
    QFont cFont("Arial", 25, QFont::Bold, false);
    QGraphicsTextItem* consumptionShadow = _scene->addText("0 Watt", cFont);
    swingGroup->addToGroup(consumptionShadow);
    consumptionShadow->translate(232, 202);
    consumptionShadow->setDefaultTextColor(Qt::green);
    QGraphicsTextItem* consumption = _scene->addText("0 Watt", cFont);
    swingGroup->addToGroup(consumption);
    consumption->translate(230, 200);
    consumption->setDefaultTextColor(Qt::white);

    swingGroup->translate(0, swingKnot1.y() - swingKnot2.y());

    _scene->addPixmap(QPixmap(":/birds/images/pillars.png"));
    */
}
#endif

void BirdsWidget::paintEvent(QPaintEvent *)
{
    _ui->view->ensureVisible(_scene->sceneRect());
    // remove the mysterious border generated by fitInView by adjusting the sceneRect
    QRectF rect(_scene->sceneRect());
    _ui->view->fitInView(QRectF(rect.x(), rect.y(), rect.width()-6, rect.height()-6), Qt::KeepAspectRatio);
}
